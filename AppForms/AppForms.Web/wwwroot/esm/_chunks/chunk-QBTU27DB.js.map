{
  "version": 3,
  "sources": ["../../../Modules/ServerTypes/AppForms/ApplicantsFromsColumns.ts", "../../../Modules/ServerTypes/AppForms/ApplicantsFromsRow.ts", "../../../Modules/ServerTypes/AppForms/ApplicantsFromsService.ts", "../../../Modules/ServerTypes/AppForms/FacultiesColumns.ts", "../../../Modules/ServerTypes/AppForms/FacultiesRow.ts", "../../../Modules/ServerTypes/AppForms/FacultiesService.ts", "../../../Modules/ServerTypes/AppForms/GovernoratesColumns.ts", "../../../Modules/ServerTypes/AppForms/GovernoratesRow.ts", "../../../Modules/ServerTypes/AppForms/GovernoratesService.ts", "../../../Modules/ServerTypes/AppForms/SpecialitiesColumns.ts", "../../../Modules/ServerTypes/AppForms/SpecialitiesRow.ts", "../../../Modules/ServerTypes/AppForms/SpecialitiesService.ts", "../../../Modules/ServerTypes/AppForms/UniversitiesColumns.ts", "../../../Modules/ServerTypes/AppForms/UniversitiesRow.ts", "../../../Modules/ServerTypes/AppForms/UniversitiesService.ts", "../../../Modules/ServerTypes/AppForms/ApplicantsFromsForm.ts", "../../../Modules/ServerTypes/AppForms/FacultiesForm.ts", "../../../Modules/ServerTypes/AppForms/GovernoratesForm.ts", "../../../Modules/ServerTypes/AppForms/SpecialitiesForm.ts", "../../../Modules/ServerTypes/AppForms/UniversitiesForm.ts"],
  "sourcesContent": ["\uFEFFexport class ApplicantsFromsColumns {\r\n    static columnsKey = 'AppForms.ApplicantsFroms';\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface ApplicantsFromsRow {\n    Id?: number;\n    GovernorateId?: number;\n    FacultyId?: number;\n    UniversityId?: number;\n    NameEn?: string;\n    Mobile?: string;\n    GithubLink?: string;\n    LinkedInLink?: string;\n    ItiGraduate?: boolean;\n    YearOfGraduation?: string;\n    GraduationYear?: string;\n    CurrentCompany?: string;\n    CurrentSalary?: string;\n    ExpectedSalary?: string;\n    AvailabilityDate?: string;\n    InterestedWorkingInCairo?: boolean;\n    MobileAppsExperience?: boolean;\n    ECommerceAppsExperience?: boolean;\n    Cv?: string;\n    SpecialityId?: number;\n    GovernorateName?: string;\n    FacultyName?: string;\n    UniversityName?: string;\n    SpecialityName?: string;\n}\n\nexport abstract class ApplicantsFromsRow {\n    static readonly idProperty = 'Id';\n    static readonly nameProperty = 'NameEn';\n    static readonly localTextPrefix = 'AppForms.ApplicantsFroms';\n    static readonly deletePermission = 'ApplicantsFroms';\n    static readonly insertPermission = 'ApplicantsFroms';\n    static readonly readPermission = 'ApplicantsFroms';\n    static readonly updatePermission = 'ApplicantsFroms';\n\n    static readonly Fields = fieldsProxy<ApplicantsFromsRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\nimport { ApplicantsFromsRow } from \"./ApplicantsFromsRow\";\n\nexport namespace ApplicantsFromsService {\n    export const baseUrl = 'AppForms/ApplicantsFroms';\n\n    export declare function Create(request: SaveRequest<ApplicantsFromsRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<ApplicantsFromsRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<ApplicantsFromsRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<ApplicantsFromsRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"AppForms/ApplicantsFroms/Create\",\n        Update: \"AppForms/ApplicantsFroms/Update\",\n        Delete: \"AppForms/ApplicantsFroms/Delete\",\n        Retrieve: \"AppForms/ApplicantsFroms/Retrieve\",\n        List: \"AppForms/ApplicantsFroms/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>ApplicantsFromsService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFexport class FacultiesColumns {\r\n    static columnsKey = 'AppForms.Faculties';\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface FacultiesRow {\n    Id?: number;\n    Name?: string;\n}\n\nexport abstract class FacultiesRow {\n    static readonly idProperty = 'Id';\n    static readonly nameProperty = 'Name';\n    static readonly localTextPrefix = 'AppForms.Faculties';\n    static readonly deletePermission = 'Faculties';\n    static readonly insertPermission = 'Faculties';\n    static readonly readPermission = 'Faculties';\n    static readonly updatePermission = 'Faculties';\n\n    static readonly Fields = fieldsProxy<FacultiesRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\nimport { FacultiesRow } from \"./FacultiesRow\";\n\nexport namespace FacultiesService {\n    export const baseUrl = 'AppForms/Faculties';\n\n    export declare function Create(request: SaveRequest<FacultiesRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<FacultiesRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<FacultiesRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<FacultiesRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"AppForms/Faculties/Create\",\n        Update: \"AppForms/Faculties/Update\",\n        Delete: \"AppForms/Faculties/Delete\",\n        Retrieve: \"AppForms/Faculties/Retrieve\",\n        List: \"AppForms/Faculties/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>FacultiesService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFexport class GovernoratesColumns {\r\n    static columnsKey = 'AppForms.Governorates';\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface GovernoratesRow {\n    Id?: number;\n    Name?: string;\n}\n\nexport abstract class GovernoratesRow {\n    static readonly idProperty = 'Id';\n    static readonly nameProperty = 'Name';\n    static readonly localTextPrefix = 'AppForms.Governorates';\n    static readonly deletePermission = 'Governorates';\n    static readonly insertPermission = 'Governorates';\n    static readonly readPermission = 'Governorates';\n    static readonly updatePermission = 'Governorates';\n\n    static readonly Fields = fieldsProxy<GovernoratesRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\nimport { GovernoratesRow } from \"./GovernoratesRow\";\n\nexport namespace GovernoratesService {\n    export const baseUrl = 'AppForms/Governorates';\n\n    export declare function Create(request: SaveRequest<GovernoratesRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<GovernoratesRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<GovernoratesRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<GovernoratesRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"AppForms/Governorates/Create\",\n        Update: \"AppForms/Governorates/Update\",\n        Delete: \"AppForms/Governorates/Delete\",\n        Retrieve: \"AppForms/Governorates/Retrieve\",\n        List: \"AppForms/Governorates/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>GovernoratesService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFexport class SpecialitiesColumns {\r\n    static columnsKey = 'AppForms.Specialities';\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface SpecialitiesRow {\n    Id?: number;\n    Name?: string;\n}\n\nexport abstract class SpecialitiesRow {\n    static readonly idProperty = 'Id';\n    static readonly nameProperty = 'Name';\n    static readonly localTextPrefix = 'AppForms.Specialities';\n    static readonly deletePermission = 'Specialities';\n    static readonly insertPermission = 'Specialities';\n    static readonly readPermission = 'Specialities';\n    static readonly updatePermission = 'Specialities';\n\n    static readonly Fields = fieldsProxy<SpecialitiesRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\nimport { SpecialitiesRow } from \"./SpecialitiesRow\";\n\nexport namespace SpecialitiesService {\n    export const baseUrl = 'AppForms/Specialities';\n\n    export declare function Create(request: SaveRequest<SpecialitiesRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<SpecialitiesRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<SpecialitiesRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<SpecialitiesRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"AppForms/Specialities/Create\",\n        Update: \"AppForms/Specialities/Update\",\n        Delete: \"AppForms/Specialities/Delete\",\n        Retrieve: \"AppForms/Specialities/Retrieve\",\n        List: \"AppForms/Specialities/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>SpecialitiesService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFexport class UniversitiesColumns {\r\n    static columnsKey = 'AppForms.Universities';\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface UniversitiesRow {\n    Id?: number;\n    Name?: string;\n}\n\nexport abstract class UniversitiesRow {\n    static readonly idProperty = 'Id';\n    static readonly nameProperty = 'Name';\n    static readonly localTextPrefix = 'AppForms.Universities';\n    static readonly deletePermission = 'Universities';\n    static readonly insertPermission = 'Universities';\n    static readonly readPermission = 'Universities';\n    static readonly updatePermission = 'Universities';\n\n    static readonly Fields = fieldsProxy<UniversitiesRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\nimport { UniversitiesRow } from \"./UniversitiesRow\";\n\nexport namespace UniversitiesService {\n    export const baseUrl = 'AppForms/Universities';\n\n    export declare function Create(request: SaveRequest<UniversitiesRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<UniversitiesRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<UniversitiesRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<UniversitiesRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"AppForms/Universities/Create\",\n        Update: \"AppForms/Universities/Update\",\n        Delete: \"AppForms/Universities/Delete\",\n        Retrieve: \"AppForms/Universities/Retrieve\",\n        List: \"AppForms/Universities/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>UniversitiesService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { IntegerEditor, StringEditor, BooleanEditor, DateEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface ApplicantsFromsForm {\n    GovernorateId: IntegerEditor;\n    FacultyId: IntegerEditor;\n    UniversityId: IntegerEditor;\n    NameEn: StringEditor;\n    Mobile: StringEditor;\n    GithubLink: StringEditor;\n    LinkedInLink: StringEditor;\n    ItiGraduate: BooleanEditor;\n    YearOfGraduation: StringEditor;\n    GraduationYear: StringEditor;\n    CurrentCompany: StringEditor;\n    CurrentSalary: StringEditor;\n    ExpectedSalary: StringEditor;\n    AvailabilityDate: DateEditor;\n    InterestedWorkingInCairo: BooleanEditor;\n    MobileAppsExperience: BooleanEditor;\n    ECommerceAppsExperience: BooleanEditor;\n    Cv: StringEditor;\n    SpecialityId: IntegerEditor;\n}\n\nexport class ApplicantsFromsForm extends PrefixedContext {\n    static formKey = 'AppForms.ApplicantsFroms';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!ApplicantsFromsForm.init)  {\n            ApplicantsFromsForm.init = true;\n\n            var w0 = IntegerEditor;\n            var w1 = StringEditor;\n            var w2 = BooleanEditor;\n            var w3 = DateEditor;\n\n            initFormType(ApplicantsFromsForm, [\n                'GovernorateId', w0,\n                'FacultyId', w0,\n                'UniversityId', w0,\n                'NameEn', w1,\n                'Mobile', w1,\n                'GithubLink', w1,\n                'LinkedInLink', w1,\n                'ItiGraduate', w2,\n                'YearOfGraduation', w1,\n                'GraduationYear', w1,\n                'CurrentCompany', w1,\n                'CurrentSalary', w1,\n                'ExpectedSalary', w1,\n                'AvailabilityDate', w3,\n                'InterestedWorkingInCairo', w2,\n                'MobileAppsExperience', w2,\n                'ECommerceAppsExperience', w2,\n                'Cv', w1,\n                'SpecialityId', w0\n            ]);\n        }\n    }\n}", "\uFEFFimport { StringEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface FacultiesForm {\n    Name: StringEditor;\n}\n\nexport class FacultiesForm extends PrefixedContext {\n    static formKey = 'AppForms.Faculties';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!FacultiesForm.init)  {\n            FacultiesForm.init = true;\n\n            var w0 = StringEditor;\n\n            initFormType(FacultiesForm, [\n                'Name', w0\n            ]);\n        }\n    }\n}", "\uFEFFimport { StringEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface GovernoratesForm {\n    Name: StringEditor;\n}\n\nexport class GovernoratesForm extends PrefixedContext {\n    static formKey = 'AppForms.Governorates';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!GovernoratesForm.init)  {\n            GovernoratesForm.init = true;\n\n            var w0 = StringEditor;\n\n            initFormType(GovernoratesForm, [\n                'Name', w0\n            ]);\n        }\n    }\n}", "\uFEFFimport { StringEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface SpecialitiesForm {\n    Name: StringEditor;\n}\n\nexport class SpecialitiesForm extends PrefixedContext {\n    static formKey = 'AppForms.Specialities';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!SpecialitiesForm.init)  {\n            SpecialitiesForm.init = true;\n\n            var w0 = StringEditor;\n\n            initFormType(SpecialitiesForm, [\n                'Name', w0\n            ]);\n        }\n    }\n}", "\uFEFFimport { StringEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface UniversitiesForm {\n    Name: StringEditor;\n}\n\nexport class UniversitiesForm extends PrefixedContext {\n    static formKey = 'AppForms.Universities';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!UniversitiesForm.init)  {\n            UniversitiesForm.init = true;\n\n            var w0 = StringEditor;\n\n            initFormType(UniversitiesForm, [\n                'Name', w0\n            ]);\n        }\n    }\n}"],
  "mappings": "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",
  "names": ["ApplicantsFromsColumns", "__name", "import_q", "ApplicantsFromsRow", "__name", "import_q", "ApplicantsFromsService", "x", "r", "s", "o", "FacultiesColumns", "__name", "import_q", "FacultiesRow", "__name", "import_q", "FacultiesService", "x", "r", "s", "o", "GovernoratesColumns", "__name", "import_q", "GovernoratesRow", "__name", "import_q", "GovernoratesService", "x", "r", "s", "o", "SpecialitiesColumns", "__name", "import_q", "SpecialitiesRow", "__name", "import_q", "SpecialitiesService", "x", "r", "s", "o", "UniversitiesColumns", "__name", "import_q", "UniversitiesRow", "__name", "import_q", "UniversitiesService", "x", "r", "s", "o", "import_corelib", "import_q", "_ApplicantsFromsForm", "prefix", "w0", "w1", "w2", "w3", "ApplicantsFromsForm", "__name", "import_corelib", "import_q", "_FacultiesForm", "prefix", "w0", "FacultiesForm", "__name", "import_corelib", "import_q", "_GovernoratesForm", "prefix", "w0", "GovernoratesForm", "__name", "import_corelib", "import_q", "_SpecialitiesForm", "prefix", "w0", "SpecialitiesForm", "__name", "import_corelib", "import_q", "_UniversitiesForm", "prefix", "w0", "UniversitiesForm", "__name"]
}
